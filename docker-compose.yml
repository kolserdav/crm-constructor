version: "3.3"
services:
  web:
    image: nginx
    ports:
      - 8080:8080
    networks:
      br0:
        ipv4_address: 172.18.0.2
    container_name: web
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./app/build:/home/build
    restart: always
  node:
    image: node
    ports:
      - 8000:8000
    restart: always
    networks:
      br0:
        ipv4_address: 172.18.0.3
    container_name: node
    volumes:
      - ./.env:/home/.env
      - ./bin/server.js:/home/bin/server.js
      - ./lib/*:/home/lib/*
      - ./package.json:/home/package.json
    command: bash -c "
      cd /home && npm install && node bin/server.js  
      "
  mongo:
    image: mongo
    restart: always
    networks:
      br0:
        ipv4_address: 172.18.0.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    container_name: db
  mongo_express:
    image: mongo-express
    networks:
      br0:
        ipv4_address: 172.18.0.5
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    container_name: db_admin
networks:
  br0:
    driver: bridge
    ipam:     
      config:
        - subnet: 172.18.0.1/16
